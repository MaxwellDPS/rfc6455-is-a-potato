services:
  headscale:
    image: headscale/headscale:0.22.3
    container_name: headscale
    command: bash /launch.sh
    volumes:
      - headscale_data:/var/lib/headscale
      - ./config/headscale.yaml:/etc/headscale/config.yaml
      - ./config/headscale.sh:/launch.sh
      - headscale_socket:/var/run/headscale/
    environment:
      - HEADSCALE_CONFIG_FILE=/etc/headscale/config.yaml
    networks:
      - headscale_network
    labels:
      - "prometheus-job=headscale"

  headscale-admin:
    image: goodieshq/headscale-admin:latest
    container_name: headscale-admin
    restart: unless-stopped
    ports:
      - 8081:80
    networks:
      - headscale_network

  rfc6455-proxy:
    image: maxwelldps/rfc6455-proxy:main
    container_name: rfc6455-proxy
    build: .
    env_file:
      - .env
    networks:
      - headscale_network
    labels:
      - "prometheus-job=rfc6455-proxy"

  nginx:
    image: nginx:latest
    tty: true
    container_name: nginx
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
      - nginx_tls:/etc/nginx/ssl
      - ./config/99-nginx-ssl.sh:/docker-entrypoint.d/99-nginx-ssl.sh
    depends_on:
      - headscale
      - rfc6455-proxy
    networks:
      - cloudflare-tunnel
      - headscale_network
    labels:
      - "prometheus-job=nginx"
    ports:
      - 8080:80
      - 8443:443
    

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    command: 
      - tunnel
      - '--metrics'
      - '0.0.0.0:8080'
      - run
      - '--token'
      - ${CLOUDFLARE_TOKEN}
      - headscale
    networks:
      - cloudflare-tunnel
    labels:
      - "prometheus-job=cloudflared"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - headscale_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    env_file:
      - .env
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - headscale_network

volumes:
  nginx_tls:
  grafana_data:
  headscale_data:
  headscale_socket:

networks:
  headscale_network:
    driver: bridge

  cloudflare-tunnel:
    driver: bridge
    # external: true
